{"version":3,"sources":["Images/About us.svg","logo.svg","Covid/Covid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Covid","className","style","paddingTop","marginRight","textAlign","fontSize","color","fontWeight","marginTop","src","pic","alt","height","paddingLeft","marginBottom","type","padding","width","class","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,sC,yECA3CD,EAAOC,QAAU,IAA0B,kC,4JCiC5BC,E,uKA5BX,OACI,oCACA,yBAAKC,UAAU,QACd,yBAAKA,UAAU,MAAMC,MAAO,CAACC,WAAW,SACpC,yBAAKF,UAAU,wBACX,uBAAGA,UAAU,UAAUC,MAAO,CAACE,YAAY,QAAQC,UAAU,OAAOC,SAAS,OAAOC,MAAM,QAAQC,WAAW,SAA7G,kBACA,uBAAGN,MAAO,CAACK,MAAM,QAAQD,SAAS,SAAlC,WACA,uBAAGJ,MAAO,CAACO,UAAU,OAAOH,SAAS,SAArC,kQACA,uBAAGJ,MAAO,CAACI,SAAS,SAApB,iDAA2E,8BAE/E,yBAAKL,UAAU,wBACX,yBAAKA,UAAU,oBAClB,yBAAKS,IAAKC,IAAKC,IAAI,UAAUV,MAAO,CAACW,OAAO,QAAQC,YAAY,QAAQC,aAAa,WAErF,yBAAKd,UAAU,OACf,4BAAQe,KAAK,SAASd,MAAO,CAACa,aAAa,OAAOE,QAAQ,OAAOC,MAAM,QAAQZ,SAAS,QAASa,MAAM,2BAAvG,oCAIL,yBAAKlB,UAAW,mBAChB,yBAAKA,UAAU,wBAAwBC,MAAO,CAACO,UAAU,OAAOM,aAAa,OAAOT,SAAS,SAA7F,6I,GAtBWc,IAAMC,WCkBXC,MAbf,WACE,OACE,yBAAKrB,UAAU,OAMb,kBAAC,EAAD,QCJcsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.362f012b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/About us.e9369e7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./Covid.css\";\nimport pic from \"../Images/About us.svg\";\nclass Covid extends React.Component\n{ render(){\n    return(\n        <>\n        <div className=\"div2\"  >\n         <div className=\"row\" style={{paddingTop:\"30px\"}}>\n             <div className=\"col-md-4 offset-md-1\">\n                 <p className=\"heading\" style={{marginRight:\"200px\",textAlign:\"left\",fontSize:\"30px\",color:\" blue\",fontWeight:\"bold\"}}>Recommendation</p>\n                 <p style={{color:\" blue\",fontSize:\"30px\"}}>NIMA CC</p>\n                 <p style={{marginTop:\"45px\",fontSize:\"20px\"}}>Real-time training during global emergencies is critical for effective preparedness and response.The COVID-19 channel provides learning resources for health professionals, decision-makers and the public for the outbreak of coronavirus disease (COVID-19).</p>\n                 <p style={{fontSize:\"20px\"}}>Get Certificate for these Free Online Courses.<p/></p>\n              </div>\n             <div className=\"col-md-4 offset-md-2\">\n                 <div className=\"row align-center\">\n              <img src={pic} alt=\"picture\" style={{height:\"200px\",paddingLeft:\"140px\",marginBottom:\"40px\"}}></img>\n              </div>\n              <div className=\"row\">\n              <button type=\"button\" style={{marginBottom:\"30px\",padding:\"10px\",width:\"458px\",fontSize:\"22px\"}} class=\"btn btn-outline-primary\">training for current outbreak</button>\n              </div>\n             </div>\n         </div>\n         <div className= \"row offset-md-1\" >\n         <div className=\"col-md-11 offset-md-1\" style={{marginTop:\"35px\",marginBottom:\"50px\",fontSize:\"20px\"}} >\n             This is to inform you that there is a misprint in the nomination form send to you by me with the Notice of the 61st Annual Central</div>\n        </div></div>\n        </>\n    )\n}\n}\n\nexport default Covid ;","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\n// import Desk from './Desk/Desk';\n// import StateBranchOfficials from './StateBranchOfficial/StateBranchOfficial';\nimport Covid from './Covid/Covid';\n// import Aboutus from './AboutUs/AboutUs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/*\n      <Aboutus/>\n      <Desk/>\n      <StateBranchOfficials/>\n    */}\n      <Covid />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}