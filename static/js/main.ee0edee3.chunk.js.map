{"version":3,"sources":["Images/Vector.svg","logo.svg","Desk/Desk.js","Desk/Doctor.js","App.js","serviceWorker.js","index.js","Images/Rectangle 204.png","Images/bi_arrow-right.svg"],"names":["module","exports","responsive","React","Component","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","Desk","props","openModel","doctor","setState","showDoctors","selectedDoctor","closeModel","state","doctors","image","president","designation","name","description","console","log","this","className","href","src","arrow","alt","style","marginLeft","swipeable","draggable","showArrows","ssr","keyBoardControl","containerClass","removeArrowOnDeviceType","deviceType","itemClass","map","index","key","onClick","e","type","cross","marginTop","lineHeight","fontSize","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee0edee3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vector.2f4576ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Fragment } from 'react';\r\nimport  styles from './Desk.css';\r\nimport president from '../Images/Rectangle 204.png';\r\nimport arrow from '../Images/bi_arrow-right.svg';\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Doctor from './Doctor';\r\nimport cross from '../Images/Vector.svg';\r\n\r\nconst responsive = {\r\n  superLargeDesktop: {\r\n    // the naming can be any, depends on you.\r\n    breakpoint: { max: 4000, min: 3000 },\r\n    items: 2\r\n  },\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 2\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 2\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n      items: 1.5,\r\n  }\r\n};\r\nclass Desk extends React.Component{\r\n    constructor(props)\r\n    { \r\n        super(props);\r\n        this.state = {\r\n            showDoctors: false,\r\n            doctors: [\r\n                {\r\n                    image:president,\r\n                    designation: \"President\",\r\n                    name: \"Dr. V.B. Themburnikar\",\r\n                    description:\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur congue lacinia pretium. Vivamus sit amet blandit elit. Mauris fringilla lorem et commodo malesuada. Nulla quis pulvinar risus. Nunc tincidunt ante vitae erat facilisis lobortis. Duis sapien nisl, ullamcorper ac accumsan non, eleifend vel purus. Sed pretium tortor diam, vel pharetra augue lobortis quis. Aliquam sed lacinia lectus. Duis finibus leo et nunc dignissim, vitae hendrerit arcu sagittis. Quisque sed augue iaculis, ornare\",\r\n                },\r\n                {\r\n                    image:president,\r\n                    designation: \"Gen. Secretry\",\r\n                    name:\"Dr. U.S.Pandey \",\r\n                    description:\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur congue lacinia pretium. Vivamus sit amet blandit elit. Mauris fringilla lorem et commodo malesuada. Nulla quis pulvinar risus. Nunc tincidunt ante vitae erat facilisis lobortis. Duis sapien nisl, ullamcorper ac accumsan non, eleifend vel purus. Sed pretium tortor diam, vel pharetra augue lobortis quis. Aliquam sed lacinia lectus. Duis finibus leo et nunc dignissim, vitae hendrerit arcu sagittis. Quisque sed augue iaculis, ornare\",\r\n                },\r\n                {\r\n                    image:president,\r\n                    designation: \"Treasurer\",\r\n                    name: \"Dr. Ashutosh Kulakrni\",\r\n                    description:\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur congue lacinia pretium. Vivamus sit amet blandit elit. Mauris fringilla lorem et commodo malesuada. Nulla quis pulvinar risus. Nunc tincidunt ante vitae erat facilisis lobortis. Duis sapien nisl, ullamcorper ac accumsan non, eleifend vel purus. Sed pretium tortor diam, vel pharetra augue lobortis quis. Aliquam sed lacinia lectus. Duis finibus leo et nunc dignissim, vitae hendrerit arcu sagittis. Quisque sed augue iaculis, ornare\",\r\n                    \r\n                }\r\n            ],\r\n            selectedDoctor: {\r\n                image: null,\r\n                designation: \"\",\r\n                name: \"\",\r\n                description:\"\",\r\n            },\r\n        }\r\n        // this.openModel = this.openModel.bind(this);\r\n\r\n    }\r\n    openModel = (doctor) => {\r\n        this.setState({ showDoctors: true });\r\n        this.setState({ selectedDoctor: doctor });\r\n        // console.log(event.currentTarget.dataset)\r\n        // console.log(doctor);\r\n\r\n    }\r\n    closeModel = () => {\r\n        this.setState({ showDoctors: false});        \r\n    }\r\n    render()\r\n    {\r\n        console.log(this.state.doctors);\r\n        return(\r\n            <div className=\"container\">\r\n            \r\n            {!this.state.showDoctors &&\r\n               <Fragment>\r\n               <hr />\r\n               \r\n               <div className=\"row align-items-center\">  \r\n               <div className =\"col-12 col-md-6 txt\" >\r\n               <h1>Desk</h1>\r\n                        <p className=\"textPara\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur congue lacinia pretium. Vivamus sit amet blandit elit. Mauris fringilla lorem et commodo malesuada. Nulla quis pulvinar risus. Nunc tincidunt ante vitae erat facilisis lobortis. Duis sapien nisl, ullamcorper ac accumsan non, eleifend vel purus. Sed pretium tortor diam, vel pharetra augue lobortis quis. Aliquam sed lacinia lectus. Duis finibus leo et nunc dignissim, vitae hendrerit arcu sagittis. Quisque sed augue iaculis, ornare\r\n                        </p>\r\n                        \r\n                        <span className=\"linkDesktop\">\r\n                        <a href=\"#\">Click to know more</a>\r\n                        <img src={arrow} alt=\"Right Arrow\" style={{marginLeft:\"1rem\"}}/>\r\n                        </span>\r\n                        \r\n                        </div> \r\n                        <div className=\"col-12 col-md-6\" >\r\n                        <Carousel\r\n                        className=\"mobileCarousel\"\r\n                        swipeable={true}\r\n                        draggable={false}\r\n                        responsive={responsive}\r\n                        showArrows={false}\r\n                        ssr={false} // means to render carousel on server-side.\r\n                        // infinite={true}\r\n                        // autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\r\n                        // autoPlaySpeed={1000}\r\n                        keyBoardControl={true}\r\n                        // customTransition=\"all .5\"\r\n                        // transitionDuration={500}\r\n                        containerClass=\"carousel-container\"\r\n                        removeArrowOnDeviceType={[\"desktop\",\"tablet\", \"mobile\"]}\r\n                        deviceType={this.props.deviceType}\r\n                    itemClass=\"carousel-item-padding-40-px\"\r\n                    >\r\n                    \r\n                    {\r\n                        this.state.doctors.map((doctor,index) =>\r\n                        <div key={index} className=\"doctorContainer\" onClick={e => this.openModel(doctor)}>\r\n                        <div className=\"imageContainer\">\r\n                        <img src={doctor.image} alt={doctor.name} className=\"doctorImage\" />\r\n                        <p className=\"doctorDesignation\">{doctor.designation}</p>\r\n                        </div>\r\n                        <p className=\"doctorName\">{doctor.name}</p>\r\n                        </div>\r\n                        )\r\n                    }\r\n                    </Carousel>\r\n                    <span className=\"linkMobile\">\r\n                    <a href=\"#\">Click to know more</a>\r\n                    <img src={arrow} alt=\"Right Arrow\" style={{marginLeft:\"1rem\"}}/>\r\n                    </span>     \r\n                    </div>\r\n                    </div>\r\n                    </Fragment>\r\n                }\r\n                        {\r\n                            this.state.showDoctors && \r\n                            //   <Doctor />\r\n                    <Fragment>\r\n                    <div className=\"linkDesktop container\">\r\n                    <div className=\"row align-items-center\">\r\n                    <div className=\"col-md-6\">\r\n                    <button type=\"btn\" className=\"closeButton\"><img src={cross} alt=\"close\" onClick={this.closeModel} /></button> \r\n                    <h1 style={{marginTop:\"108px\"}}>{this.state.selectedDoctor.designation}</h1>\r\n                    <p className=\"doctorName\" style={{lineHeight:\"1rem\"}}>{this.state.selectedDoctor.name}</p>\r\n                    <p style={{marginTop:\"50px\",fontSize:\"14px\"}}>{this.state.selectedDoctor.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    <img src={this.state.selectedDoctor.image} alt={this.state.selectedDoctor.name} className=\"selectedDoctorImage\" />\r\n                                <p className=\"selectedDoctorDesignation\">{this.state.selectedDoctor.designation}</p>\r\n                                </div>\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"linkMobile\">                    \r\n                    <div className=\"row align-items-center\">\r\n                    \r\n                    <div className=\"col-12\">    \r\n                    <div className=\"rowText\">\r\n                    <h1 >{this.state.selectedDoctor.designation}</h1>\r\n                    <button type=\"btn\" className=\"closeButton\"><img src={cross} alt=\"close\" onClick={this.closeModel} /></button> \r\n                    </div>\r\n                    <p className=\"doctorName\" style={{lineHeight:\"1rem\"}}>{this.state.selectedDoctor.name}</p>\r\n                    <img src={this.state.selectedDoctor.image} alt={this.state.selectedDoctor.name} className=\"selectedDoctorImage\" />\r\n                    <p className=\"selectedDoctorDesignation\">{this.state.selectedDoctor.designation}</p>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                   \r\n                    <p style={{marginTop:\"50px\",fontSize:\"14px\"}}>{this.state.selectedDoctor.description}</p>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    </Fragment>\r\n                }\r\n                </div>\r\n                ); \r\n                \r\n                \r\n            }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Desk;","import React from \"react\";\nimport cross from '../Images/Vector.svg';\n\nclass Doctor extends React.Component{\n    constructor(props) {\n        super(props);\n\n}\n\n    render() {\n        return (\n            <div className=\"col-12\">\n                <button type=\"btn\" className=\"closeButton\"><img src={cross} alt=\"close\" /></button> \n                <h1>{this.props.designation}\n                </h1>\n            </div>\n        );\n    }\n}\nexport default Doctor;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Desk from './Desk/Desk';\n// import StateBranchOfficials from './StateBranchOfficial/StateBranchOfficial';\n// import Covid from './Covid/Covid';\n// import Aboutus from './AboutUs/AboutUs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/*\n      <Covid />\n      <StateBranchOfficials/>\n      <Aboutus/>\n    */}\n    <Desk/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Rectangle 204.2b86399c.png\";","module.exports = __webpack_public_path__ + \"static/media/bi_arrow-right.062c3e42.svg\";"],"sourceRoot":""}